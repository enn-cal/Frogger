#####################################################################
#
# BITMAP DISPLAY CONFIGURATION:
# - Unit width in pixels: 4
# - Unit height in pixels: 4
# - Display width in pixels: 512
# - Display height in pixels: 512
# - Base Address for Display: 0x10008000 ($gp)
#
# FEATURES IMPLEMENTED:
# 1. Dynamic increase in difficulty (speed, obstacles, etc.) as game progresses
# 2. Make objects (frog, logs, turtles, vehicles, etc) look more like the arcade version.
# 3. Add a third row in each of the water and road sections.
# 4. Display a death/respawn animation each time the player loses a frog.
# 5. Make the frog point in the direction that it’s traveling.
# 6. Add sound effects for movement, losing lives, collisions, and reaching the goal.
# 7. Displaying a pause screen or image when the ‘p’ key is pressed, and returning to
# the game when ‘p’ is pressed again.
#
#####################################################################

.data

displayAddress: .word 0x10008000

safe_color: .word 0xfff9ed
frog_color: .word 0x9dff00
	
x_frog: .word 30
y_frog: .word 49
	
x_frog_initial: .word 30
y_frog_initial: .word 49
	
goals_accomplished: .word 0
lives: .word 3
	
	safe_lane_top: .word 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			     0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			     0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			     0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0x5e548e, 0x5e548e,
			    0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0x5e548e, 0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec,
			    0xfff9ec, 0xfff9ec, 0xfff9ec, 0xfff9ec
			     
			 
	water_lane_1: .word 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,			 
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x0a9396, 0x0a9396,			   
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			    0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,			 
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x0a9396, 0x0a9396,			   
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			    0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,			 
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x0a9396, 0x0a9396,			   
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			    0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,			 
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x0a9396, 0x0a9396,			   
			   0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6
			   
	water_lane_2: .word 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			     0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			    0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 
			    0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6

	water_lane_3: .word 0xa3d8c6, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			  0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			  0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			  0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			  0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			  0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			  0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			  0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396,
			  0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0x0a9396, 0xa3d8c6, 0xa3d8c6,
			  0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6
			  
	water_lane_4: .word 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6,
			    0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6,
			    0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6,
			    0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6,
			   0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0xa3d8c6, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b, 0x003f4b,
			   0x003f4b, 0x003f4b, 0xa3d8c6, 0xa3d8c6
			   
	road_lane_1: .word 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077, 0x001219, 0x001219, 0xffd077, 0xffd077,
			  0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0x001219, 0xffd077, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077,
			  0x001219, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0xffd077, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd077, 0x001219, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219,
			  0xffd077, 0xffd078, 0xffd078, 0xffd078,
			   0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00,
			  0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xee9b00,
			  0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00,
			  0xee9b00, 0xffd078, 0xffd078, 0xffd078,
			   0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00,
			  0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xee9b00,
			  0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00, 0xee9b00,
			  0xee9b00, 0xffd078, 0xffd078, 0xffd078,
			   0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077, 0x001219, 0x001219, 0xffd077, 0xffd077,
			  0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0x001219, 0xffd077, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077,
			  0x001219, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0xffd077, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd077, 0x001219, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219,
			  0xffd077, 0xffd078, 0xffd078, 0xffd078
			  
	road_lane_2: .word 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077, 0x001219,
			  0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0xffd077, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077,
			  0x001219, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0xffd077, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078,
			   0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xca6702, 0xca6702,
			  0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xca6702,
			  0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 
			   0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xca6702, 0xca6702,
			  0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xca6702,
			  0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xca6702, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078,
			   0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077, 0x001219,
			  0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0xffd077, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077,
			  0x001219, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0xffd077, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078
			  
	road_lane_3: .word 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd077, 0x001219, 0x001219, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077,
			  0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219,
			  0x001219, 0xffd077, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077, 0x001219, 0xffd077, 0x001219,
			  0xffd077, 0xffd078, 0xffd078, 0xffd078,
			   0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402,
			  0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402,
			  0x9f3402, 0x9f3402, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402,
			  0x9f3402, 0xffd078, 0xffd078, 0xffd078,
			   0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402,
			  0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402,
			  0x9f3402, 0x9f3402, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0x9f3402, 0x9f3402, 0x9f3402, 0x9f3402,
			  0x9f3402, 0xffd078, 0xffd078, 0xffd078,
			   0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd077, 0x001219, 0x001219, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077,
			  0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219,
			  0x001219, 0xffd077, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077, 0x001219, 0xffd077, 0x001219,
			  0xffd077, 0xffd078, 0xffd078, 0xffd078
			  
	road_lane_4: .word 0xffd078, 0xffd077, 0x001219, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0xffd077, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077, 0x001219, 0x001219, 0xffd077,
			  0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0x001219,
			  0xffd077, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078,0xffd078, 0xffd078,
			   0xffd078, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b,
			  0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b,
			  0x6f181b, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078,0xffd078, 0xffd078,
			   0xffd078, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b,
			  0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b, 0x6f181b,
			  0x6f181b, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078,0xffd078, 0xffd078,
			   0xffd078, 0xffd077, 0x001219, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0xffd077, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd077, 0x001219, 0x001219, 0xffd077,
			  0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0xffd077, 0x001219, 0x001219,
			  0xffd077, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078, 0xffd078,
			  0xffd078, 0xffd078,0xffd078, 0xffd078

.text

# register usage
# $t0 - displayAddress
# $t1 - color
# $t3 - read from array
# $t4 - loop variable
# $t7 - x_frog
# $t8 - y_frog

# setup screen - called just once
main:
	lw $t0, displayAddress		# base display address in $t0
	
	add $t5, $zero, $zero		# initialize registers for future use
	add $s4, $zero, $zero
	add $s3, $zero $zero	
	addi $s1, $zero, 50
	
	lw $t1, safe_color
	
	# draw top safe zone 		
	addi $t0, $t0, 2304		# 256 pixels in a row * 9 rows = 2304
	la $t3, safe_lane_top		# load color array into $t3 register
	jal draw_safe_top			# call function to draw lane
	
		
draw_background:
	addi $t0, $t0, 3328	# $t0 + (64 * 4) = 1024
	add $t4, $zero, $zero	# initialize $t4 to 0
				
	# for frog location
	lw $t0, displayAddress	# reset $t0 to displayAddress
	lw $t7, x_frog		# load value of x_frog in $t7 register
	lw $t8, y_frog		# load value of y_frog in $t8 register
	sll $t7, $t7, 2		# multiply x_frog by 4 = (2^2)
	sll $t8, $t8, 8		# multiply y_frog by 256 = (2^8)
	add $t0, $t0, $t7	# add x_frog * 4 to $t0
	add $t0, $t0, $t8	# add y_frog * 256 tp $t0
	
	
	# draws the frog in initial position
	# only true the first time
	# if $t6 == 0, jump to draw_frog_forward
	beq $t6, $zero, draw_frog_forward	
	
	# check the ascii value of pressed key
	# draw frog in that orientation
	beq $t6, 0x61, draw_frog_left
	beq $t6, 0x64, draw_frog_right
	beq $t6, 0x73, draw_frog_backward
	beq $t6, 0x77, draw_frog_forward
		
	end_draw_frog:
	
	# draw other elements of game
	
	# water section
	lw $t0, displayAddress		# reset $t0 to displayAddress
	addi $t0, $t0, 3328		# add old value of $t0 + 1024
	add $t0, $t0, $s4		
	la $t3, water_lane_1		# load color array into register
	jal draw_lane_left_dynamic	# call helper to draw
		
	lw $t0, displayAddress 		# reset $t0 to displayAddress
	addi $t0, $t0, 4352
	add $t0, $t0, $s3	
	la $t3, water_lane_2		
	jal draw_lane_right_dynamic
	
	lw $t0, displayAddress 		# reset $t0 to displayAddress
	addi $t0, $t0, 5376
	add $t0, $t0, $s4
	la $t3, water_lane_3	
	jal draw_lane_left_dynamic
	
	lw $t0, displayAddress 		# reset $t0 to displayAddress
	addi $t0, $t0, 6400
	add $t0, $t0, $s3
	la $t3, water_lane_4	
	jal draw_lane_right_dynamic
	
	# middle safe zone
	lw $t0, displayAddress 		# reset $t0 to displayAddress
	addi $t0, $t0, 7424
	lw $t1, safe_color
	jal draw_safe			
	
	# road section
	lw $t0, displayAddress 		# reset $t0 to displayAddress
	addi $t0, $t0, 8448
	add $t0, $t0, $s3
	la $t3, road_lane_1		
	jal draw_lane_right_dynamic
		
	lw $t0, displayAddress 		# reset $t0 to displayAddress
	addi $t0, $t0, 9472
	add $t0, $t0, $s4
	la $t3, road_lane_2		
	jal draw_lane_left_dynamic
	
	lw $t0, displayAddress 		# reset $t0 to displayAddress
	addi $t0, $t0, 10496
	add $t0, $t0, $s3
	la $t3, road_lane_3		
	jal draw_lane_right_dynamic
	
	lw $t0, displayAddress 		# reset $t0 to displayAddress
	addi $t0, $t0, 11520
	add $t0, $t0, $s4
	la $t3, road_lane_4	
	jal draw_lane_left_dynamic
	
	# bottom safe zone
	lw $t0, displayAddress 		# reset $t0 to displayAddress
	addi $t0, $t0, 12544
	lw $t1, safe_color
	jal draw_safe
	
	
	# call function to stop drawing background	
	j end_background


# Helper functions

# draw top safe zone	
draw_safe_top:
	beq $t4, 256, end_draw
	lw $t1, 0($t3)
	sw $t1, 0($t0)
			
	addi $t3, $t3, 4		# update counter
	addi $t0, $t0, 4		# next pixel in display
	addi $t4, $t4, 1		# next color in array
	j draw_safe_top
	
# draw safe zones		
draw_safe:
	beq $t4, 256, end_draw	# 64 pixels in each pixel row * 4 pixels for each lane
	sw $t1, 0($t0)
	addi $t4, $t4, 1		
	addi $t0, $t0, 4		
	j draw_safe

# draw dynamic left lane
draw_lane_left_dynamic:
	beq $t4, 256, end_draw		# add loop counter
	lw $t1, 0($t3)			# load first value of $t3 into $t1
	addi $t2, $zero, 256		# add 256 to $t2
	div $t0, $t2			# divide 
	mfhi $t9				# remainder
	
	add $t8, $t2, $s4
	ble $t8, $t9, left_offset
	sw $t1, 0($t0)	
	
	addi $t4, $t4, 1			# increment $t4 counter by 1	
	addi $t3, $t3, 4			# next array value
	addi $t0, $t0, 4			# next pixel
		
	j draw_lane_left_dynamic
	


draw_lane_right_dynamic:
	beq $t4, 256, end_draw		# add loop counter
	lw $t1, 0($t3)			# load first value of $t3 into $t1
	addi $t2, $zero, 256		# load first value of $t3 into $t1
	div $t0, $t2
	mfhi $t9
	bgt $s3, $t9, right_offset
	sw $t1, 0($t0)
	
	addi $t4, $t4, 1			# increment $t4 counter by 1	
	addi $t3, $t3, 4			# next array value
	addi $t0, $t0, 4			# next pixel
	
	j draw_lane_right_dynamic


# implement left offset values
left_offset:
	sw $t1, 256($t0)
	
	addi $t4, $t4, 1			# increment $t4 counter by 1	
	addi $t3, $t3, 4			# next array value
	addi $t0, $t0, 4			# next pixel
	
	j draw_lane_left_dynamic

# implement right offset values		
right_offset:
	sw $t1, -256($t0)
	
	addi $t4, $t4, 1			# increment $t4 counter by 1	
	addi $t3, $t3, 4			# next array value
	addi $t0, $t0, 4			# next pixel
	
	j draw_lane_right_dynamic

# stop drawing and update register values
end_draw:
	add $t4, $zero, $zero
	jr $ra

# frog size: 4*4 pixels
# draw forward facing frog pixel-by-pixel
draw_frog_forward:
	lw $t1, frog_color	# set $t1 to represent frog color
	
	# limbs
	sw $t1, 0($t0)		# top leftmost
	sw $t1, 12($t0)		# top rightmost
	
	# head
	sw $t1, 256($t0)
	sw $t1, 260($t0)
	sw $t1, 264($t0)
	sw $t1, 268($t0)
	
	# torso
	sw $t1, 516($t0)
	sw $t1, 520($t0)
	
	# lower body
	sw $t1, 768($t0)		# bottom leftmost
	sw $t1, 772($t0)
	sw $t1, 776($t0)
	sw $t1, 780($t0)		# bottom rightmost
	
	j end_draw_frog		# return to line after it was called


# draw backward facing frog pixel-by-pixel
draw_frog_backward:
	lw $t1, frog_color	# set $t1 to represent frog color
	
	# lower body
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	
	# torso
	sw $t1, 260($t0)
	sw $t1, 264($t0)
	
	# head
	sw $t1, 512($t0)
	sw $t1, 516($t0)
	sw $t1, 520($t0)
	sw $t1, 524($t0)
	
	# limbs
	sw $t1, 768($t0)
	sw $t1, 780($t0)
	
	j end_draw_frog		# return to line after it was called
	
	
# draw right facing frog pixel-by-pixel
draw_frog_right:
 	lw $t1, frog_color	# set $t1 to represent frog color
	
	sw $t1, 0($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
	
	sw $t1, 256($t0)
	sw $t1, 260($t0)
	sw $t1, 264($t0)
	
	sw $t1, 512($t0)
	sw $t1, 516($t0)
	sw $t1, 520($t0)
	
	sw $t1, 768($t0)
	sw $t1, 776($t0)
	sw $t1, 780($t0)
	
	j end_draw_frog		# return to line after it was called
 
 
# draw left facing frog pixel-by-pixel
draw_frog_left:
 	lw $t1, frog_color		# frog color
	
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 12($t0)
		
	sw $t1, 260($t0)
	sw $t1, 264($t0)
	sw $t1, 268($t0)
	
	sw $t1, 516($t0)
	sw $t1, 520($t0)
	sw $t1, 524($t0)
	
	sw $t1, 768($t0)
	sw $t1, 772($t0)
	sw $t1, 780($t0)
	
	j end_draw_frog		# return to line after it was called


# draw frog dead animation pixel-by-pixel	
draw_frog_died:
	li $t1, 0xfc03ca		# set $t1 to represent dead frog color
	
	sw $t1, 0($t0)
	sw $t1, 4($t0)
	sw $t1, 8($t0)
	sw $t1, 12($t0)
		
	sw $t1, 256($t0)
	sw $t1, 268($t0)
	
	sw $t1, 512($t0)
	sw $t1, 524($t0)
	
	sw $t1, 768($t0)
	sw $t1, 772($t0)
	sw $t1, 776($t0)
	sw $t1, 780($t0)
	
	jr $ra			# return control to next line from where it was called 
	
# function to identify any key presses
key_down:
	lw $t5, 0xffff0000	# load value to register
	beq $t5, 1, input_key	# if $t5 == 1, jump to input_key
	j repaint		# otherwise, repaint screen

# function to identify which key was pressed
input_key:
	lw $t6, 0xffff0004		# load value to register
	beq $t6, 0x61, jump_left		# if $t5 == 'a', jump to jump_left
	beq $t6, 0x64, jump_right	# if $t5 == 'd', jump to jump_right
	beq $t6, 0x73, jump_backward	# if $t5 == 's', jump to jump_backward
	beq $t6, 0x77, jump_forward	# if $t5 == 'w', jump to jump_forward
	beq $t6, 0x70, pause		# if $t5 == 'p', jump to pause

# implement frog jumping left
jump_left:
	# add sound
	li $v0, 31  	# MIDI out
	li $a0, 40	# pitch
	li $a1, 90	# duration
	li $a2, 127	# instrument
	li $a3, 100	# volume
	syscall
	
	# calculate new coordinates
	lw $t7, x_frog
	la $t8, x_frog
	addi $t9, $t7, -4	# go 4 left = subtract 4 pixels from x
	sw $t9, 0($t8)
	
	# repaint the screen
	j repaint

# implement frog jumping right
jump_right:
	# add sound
	li $v0, 31  	# MIDI out
	li $a0, 40	# pitch
	li $a1, 90	# duration
	li $a2, 127	# instrument
	li $a3, 100	# volume
	syscall
	
	# calculate new coordinates
	lw $t7, x_frog
	la $t8, x_frog
	addi $t9, $t7, 4		# go 4 right = add 4 pixels to x
	sw $t9, 0($t8)
	
	# repaint the screen
	j repaint

# implement frog jumping forward
jump_forward:
	# add sound
	li $v0, 31  	# MIDI out
	li $a0, 40	# pitch
	li $a1, 90	# duration
	li $a2, 124	# instrument
	li $a3, 100	# volume
	syscall
	
	# calculate new coordinates
	lw $t7, y_frog
	la $t8, y_frog
	addi $t9, $t7, -4	# go 4 forward = subtract 4 pixels from y
	sw $t9, 0($t8)
	
	# repaint the screen
	j repaint

# implement frog jumping backward	
jump_backward:
	# add sound
	li $v0, 31  	# MIDI out
	li $a0, 40	# pitch
	li $a1, 90	# duration
	li $a2, 124	# instrument
	li $a3, 100	# volume
	syscall
	
	# calculate new coordinates
	lw $t7, y_frog
	la $t8, y_frog
	addi $t9, $t7, 4		# go 4 backward = add 4 pixels to y
	sw $t9, 0($t8)
	
	# repaint the screen
	j repaint
	

# function to stop drawing	
end_background:
	div $s2, $s1		# divide $s2 by $s1
	mfhi $s0			# load the remainder
	addi $s2, $s2, 1		
	bne $s0, $zero, frog_collide	
	addi $s4, $s4, -16
	addi $s3, $s3, 16
	bne $s4, -256, frog_collide
	add $s4, $zero, $zero
	add $s3, $zero, $zero 


# function to identify collisions	
frog_collide:
	# calculate coordinates of frog
	lw $t0, displayAddress
	lw $t7, x_frog
	lw $t8, y_frog
	sll $t7, $t7, 2		# multiply x_frog by 4 = (2^2)
	sll $t8, $t8, 8		# multiply y_frog by 256 = (2^8)
	
	la $t2, x_frog		# save coordinates to registers for future use
	la $t9, y_frog
	
	add $t0, $t0, $t7	# add values to to $t0
	add $t0, $t0, $t8

	lw $t3, 0($t0)		# color at the top left pixel of frog
	lw $t4, 12($t0)		# color at the top right pixel of frog
	
	# check against top left pixel
	li $t1, 0xfff9ec 	# goal white	
	beq $t3, $t1, frog_died
	li $t1, 0xa3d8c6 	# water
	beq $t3, $t1, frog_died
	li $t1, 0xffd077 	# car corner	
	beq $t3, $t1, frog_died
	li $t1, 0x001219		# car tyre	
	beq $t3, $t1, frog_died	
	
	# check against top right pixel
	li $t1, 0xfff9ec 	# goal white	
	beq $t4, $t1, frog_died
	li $t1, 0xa3d8c6 	# water	
	beq $t4, $t1, frog_died
	li $t1, 0xffd077 	# car corner	
	beq $t4, $t1, frog_died
	li $t1, 0x001219 	# car tyre	
	beq $t3, $t1, frog_died
	
	# check whether frog made a goal
	lw $t3, -4($t0)
	li $t1, 0x5e548e	 	# goal
	beq $t3, $t1, frog_goal
	
	j key_down	

# implement dying frog act
frog_died:
	# add sound
	li $v0, 31  	# MIDI out
	li $a0, 100	# pitch
	li $a1, 100	# duration
	li $a2, 124	# instrument
	li $a3, 100	# volume
	syscall
	
	# draw the frog death animation
	jal draw_frog_died
	
	# decrease the frog lives by one
	# store it into lives again
	lw $t1, lives
	la $t3, lives
	addi $t1, $t1, -1
	sw $t1, 0($t3)
	
	# calculate the initial coordinates of frog
	lw $t7, x_frog_initial
	lw $t8, y_frog_initial
	sw $t7, 0($t2)
	sw $t8, 0($t9)
	
	j key_down


# implement frog making a goal action
frog_goal:
	# add sound
	li $v0, 31  	# MIDI out
	li $a0, 60	# pitch
	li $a1, 90	# duration
	li $a2, 16	# instrument
	li $a3, 100	# volume
	syscall
	
	# increase the goals_accomplished by one
	lw $t1, goals_accomplished
	la $t3, goals_accomplished
	addi $t1, $t1, 1
	sw $t1, 0($t3)
	
	# calculate the initial coordinates of frog
	lw $t7, x_frog_initial
	lw $t8, y_frog_initial
	sw $t7, 0($t2)
	sw $t8, 0($t9)
	
	# make the lanes go faster
	addi $s1, $s1, -10
	
	j key_down


# implement pause	
pause:
	lw $t5, 0xffff0000
	beq $t5, 1, resume
	j pause			# come back to this function


# implement resume	
resume:
	lw $t6, 0xffff0004
	beq $t6, 0x70, reset_t6	# if 'p' pressed, reset_t6
	j pause
	
	reset_t6:
	add $t6, $zero, $zero
	j repaint


# repaint the screen elements	
repaint:
	lw $t2, lives			# load value of lives into $t2
	beq $t2, $zero, Exit		# if lives == 0, Exit
	lw $t2, goals_accomplished	# load value of goals_accomplished into $t2
	beq $t2, 3, Exit			# if goals_accomplished == 3, Exit
	
	# function for sleep
	li $v0, 32
	li $a0, 20		
	syscall
	
	# draw background elements
	j draw_background


# called when lives == 0 or goals_accomplished == 3	
Exit:
	li $v0, 10			# terminate the program gracefully
	syscall
